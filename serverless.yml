service: ${file(./package.json):name}

frameworkVersion: '3'

plugins:
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-bundle
  - serverless-prune-plugin
  - serverless-step-functions

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, 'dev'}
  region: sa-east-1
  memorySize: 1024
  timeout: 30 # match HTTP timeout
  logRetentionInDays: 14
  apiGateway:
    shouldStartNameWithService: true
    minimumCompressionSize: 128 # compress responses over 128kb
  httpApi:
    cors:
      allowedOrigins:
       - http://127.0.0.1:3000

    authorizers:
      someJwtAuthorizer:
        type: jwt
        identitySource: $request.header.Authorization
        issuerUrl: https://dev-nh2svhzc.us.auth0.com/
        
        audience:
          - https://9shjd4c13a.execute-api.sa-east-1.amazonaws.com/dev
    

package:
  exclude:
    - node_modules/**

functions: ${file(./serverless-config/functions.yml)}

custom: ${file(./serverless-config/custom.yml)}
